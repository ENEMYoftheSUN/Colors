export class Colors{rgba;normalized;hexa;hsla;constructor(r=0,g=0,b=0,a=255){this.#setRGBA(r,g,b,a);this.#calcFromRGBA()}static fromNormalized(r=0,g=0,b=0,a=1){return(new Colors).setNormalized(r,g,b,a)}static fromHexa(r="00",g="00",b="00",a="FF"){return(new Colors).setHexa(r,g,b,a)}static fromString(cssColor="000"){cssColor=cssColor.trim().replace("#","");const len=cssColor.length;let values=["00","00","00","FF"];if(len===3||len===4){values=cssColor.match(/.?/g).filter(Boolean)}else if(len===6||len===8){values=cssColor.match(/.{2}/g).filter(Boolean)}return(new Colors).setHexa(...values)}static fromColorName(name="black"){const c=document.createElement("canvas").getContext("2d");c.fillStyle=name;return Colors.fromString(c.fillStyle)}static fromHSLA(h=0,s=0,l=0,a=1){return(new Colors).setHSLA(h,s,l,a)}getInt32ARGB(){const rgba=this.getRGBA();return(rgba.A<<24>>>0)+(rgba.R<<16>>>0)+(rgba.G<<8>>>0)+rgba.B}getInt32BGRA(){const rgba=this.getRGBA();return(rgba.B<<24>>>0)+(rgba.G<<16>>>0)+(rgba.R<<8>>>0)+rgba.A}getRGBA(){return this.rgba}getRGBAasArray(){return Object.values(this.getRGBA())}getNormalized(){return this.normalized}getNormalizedAsArray(){return Object.values(this.getNormalized())}getHexa(){return this.hexa}getHexaAsArray(){return Object.values(this.getHexa())}getHSLA(){return this.hsla}getHSLAasArray(){return Object.values(this.getHSLA())}setRgbaR(value=this.rgba.R){return this.setRGBA(value,this.rgba.G,this.rgba.B,this.rgba.A)}setRgbaG(value=this.rgba.G){return this.setRGBA(this.rgba.R,value,this.rgba.B,this.rgba.A)}setRgbaB(value=this.rgba.B){return this.setRGBA(this.rgba.R,this.rgba.G,value,this.rgba.A)}setRgbaA(value=this.rgba.A){return this.setRGBA(this.rgba.R,this.rgba.G,this.rgba.B,value)}setRGBA(r=this.rgba.R,g=this.rgba.G,b=this.rgba.B,a=this.rgba.A){this.#setRGBA(r,g,b,a);this.#calcFromRGBA();return this}setNormalizedR(value=this.normalized.R){return this.setNormalized(value,this.normalized.G,this.normalized.B,this.normalized.A)}setNormalizedG(value=this.normalized.G){return this.setNormalized(this.normalized.R,value,this.normalized.B,this.normalized.A)}setNormalizedB(value=this.normalized.B){return this.setNormalized(this.normalized.R,this.normalized.G,value,this.normalized.A)}setNormalizedA(value=this.normalized.A){return this.setNormalized(this.normalized.R,this.normalized.G,this.normalized.B,value)}setNormalized(r=this.normalized.R,g=this.normalized.G,b=this.normalized.B,a=this.normalized.A){this.#setNormalized(r,g,b,a);this.#calcFromNormalized();return this}setHexaR(value=this.hexa.R){return this.setHexa(value,this.hexa.G,this.hexa.B,this.hexa.A)}setHexaG(value=this.hexa.G){return this.setHexa(this.hexa.R,value,this.hexa.B,this.hexa.A)}setHexaB(value=this.hexa.B){return this.setHexa(this.hexa.R,this.hexa.G,value,this.hexa.A)}setHexaA(value=this.hexa.A){return this.setHexa(this.hexa.R,this.hexa.G,this.hexa.B,value)}setHexa(r=this.hexa.R,g=this.hexa.G,b=this.hexa.B,a=this.hexa.A){this.#setHexa(r,g,b,a);this.#calcFromHexa();return this}saturate(value){value=this.#clamp(value,-100,100);const hsla=this.getHSLA();const k=hsla.S*value/100;return this.clone().setHSLA(hsla.H,hsla.S+k,hsla.L,hsla.A)}lighten(value,applyToAlpha=false){value=this.#clamp(value,-100,100);const hsla=this.getHSLA();const k=hsla.L*value/100;return this.clone().setHSLA(hsla.H,hsla.S,hsla.L+k,hsla.A+(applyToAlpha?k:0))}darken(value,applyToAlpha=false){return this.lighten(-value,applyToAlpha)}clone(){return new Colors(...this.getRGBAasArray())}getComplementaryColor(){return this.clone().setHslaH(this.getHSLA().H+180)}setHslaH(value=this.hsla.H){return this.setHSLA(value,this.hsla.S,this.hsla.L,this.hsla.A)}setHslaS(value=this.hsla.S){return this.setHSLA(this.hsla.H,value,this.hsla.L,this.hsla.A)}setHslaL(value=this.hsla.L){return this.setHSLA(this.hsla.H,this.hsla.S,value,this.hsla.A)}setHslaA(value=this.hsla.A){return this.setHSLA(this.hsla.H,this.hsla.S,this.hsla.L,value)}setHSLA(h=this.hsla.H,s=this.hsla.S,l=this.hsla.L,a=this.hsla.A){this.#setHSLA(h,s,l,a);this.#calcFromHSLA();return this}toCSS_rgb(){return`rgb(${this.rgba.R}, ${this.rgba.G}, ${this.rgba.B})`}toCSS_rgba(precision=2){return`rgba(${this.rgba.R}, ${this.rgba.G}, ${this.rgba.B}, ${this.normalized.A.toFixed(precision)})`}toCSS_hex(noPrefix=false){return`${noPrefix?"":"#"}${this.hexa.R}${this.hexa.G}${this.hexa.B}`}toCSS_hexa(noPrefix=false){return`${this.toCSS_hex(noPrefix)}${this.hexa.A}`}toCSS_hsl(precision=2){return`hsl(${this.hsla.H.toFixed(precision)}, ${(this.hsla.S*100).toFixed(precision)}%, ${(this.hsla.L*100).toFixed(precision)}%)`}toCSS_hsla(precision=2,precisionAlpha=2){return`hsl(${this.hsla.H.toFixed(precision)}, ${(this.hsla.S*100).toFixed(precision)}%, ${(this.hsla.L*100).toFixed(precision)}%, ${this.hsla.A.toFixed(precisionAlpha)})`}#calcFromRGBA(){this.#normalizedFromRgba();this.#setHexaFromRGBA(this.getRGBA());this.#HSLAfromNormalized()}#calcFromNormalized(){this.#RGBAfromNormalized();this.#setHexaFromRGBA(this.getRGBA());this.#HSLAfromNormalized()}#calcFromHSLA(){this.#setNormalized(...this.#hsla2normalized(this.getHSLA()));this.#RGBAfromNormalized();this.#setHexaFromRGBA(this.getRGBA())}#calcFromHexa(){this.#setRGBA(...this.getHexaAsArray().map(v=>parseInt(v,16)));this.#normalizedFromRgba();this.#HSLAfromNormalized()}#normalizedFromRgba(){this.#setNormalized(...this.getRGBAasArray().map(v=>v/255))}#HSLAfromNormalized(){this.#setHSLA(...this.#normalized2hsla(this.getNormalized()))}#RGBAfromNormalized(){this.#setRGBA(...this.getNormalizedAsArray().map(v=>v*255))}#setRGBA(r,g,b,a){this.rgba={R:this.#colorClamp(r),G:this.#colorClamp(g),B:this.#colorClamp(b),A:this.#colorClamp(a)}}#setNormalized(r,g,b,a){this.normalized={R:this.#clamp(r,0,1),G:this.#clamp(g,0,1),B:this.#clamp(b,0,1),A:this.#clamp(a,0,1)}}#setHexa(r,g,b,a){this.hexa={R:this.#cleanHexa(r),G:this.#cleanHexa(g),B:this.#cleanHexa(b),A:this.#cleanHexa(a)}}#setHexaFromRGBA(rgba){this.hexa={R:this.#dec2hex(rgba.R),G:this.#dec2hex(rgba.G),B:this.#dec2hex(rgba.B),A:this.#dec2hex(rgba.A)}}#setHSLA(h,s,l,a){this.hsla={H:h%360,S:this.#clamp(s,0,1),L:this.#clamp(l,0,1),A:this.#clamp(a,0,1)}}#colorClamp(num){return this.#clamp(Math.round(num),0,255)}#clamp(value,min,max){return Math.min(Math.max(value,min),max)}#dec2hex(v){return this.#colorClamp(v).toString(16).padStart(2,"0").toUpperCase()}#cleanHexa(value){const cleaned=value.replace(/[^0-9A-F]/gi,"").substring(0,2).toUpperCase();return cleaned.length===1?cleaned+cleaned:cleaned}#normalized2hsla(normalized){const normR=normalized.R;const normG=normalized.G;const normB=normalized.B;const v=Math.max(normR,normG,normB);const v2=v+v;const c=v-Math.min(normR,normG,normB);const f=1-Math.abs(v2-c-1);const h=c&&(v===normR?(normG-normB)/c:v===normG?2+(normB-normR)/c:4+(normR-normG)/c);return[60*(h<0?h+6:h),f?c/f:0,(v2-c)/2,normalized.A]}#hsla2normalized(hsla){const v=hsla.S*Math.min(hsla.L,1-hsla.L);const f=(n,k=(n+hsla.H/30)%12)=>hsla.L-v*Math.max(Math.min(k-3,9-k,1),-1);return[f(0),f(8),f(4),hsla.A]}}